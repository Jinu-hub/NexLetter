slack_collection_task:
  설명: >
    기존 Slack 원시 JSON (예: slack_raw.json)을 입력으로 받아
    {팀/프로젝트} 관련 대화, 스레드, 리액션을 구조화한다.
    (새로운 크롤링/검색 없음)

    입력 스키마 (예시):
    - 메시지 필드: ts, userInfo(id/name), text, reactions[], thread(replies[]), permalink

    처리 단계:
    1) 정규화: ts→ISO 시간, userInfo→표시명, thread.reply_count 추가
    2) 노이즈 필터: 빈 자동 포스트 제거 또는 낮은 가중치
    3) 토픽 감지: Redmine/이슈 링크, 주요 키워드(예: LEAD, 修正依頼表)
    4) 중요도 스코어링: 리액션 + 스레드 길이 + 멘션 + 키워드
    5) 카테고리 분류: 공지 / 이슈 논의 / 진행 상황 / Q&A / 결정 사항
    6) {팀/프로젝트} 연관성 점수 부여

  예상_출력: >
    # Slack 활동 수집: {팀/프로젝트}

    **수집 요약**
    - 메시지 수:
    - 스레드 수 (댓글 포함):
    - 리액션 총합:
    - 필터링 후:
    - 수집 시각:

    ---

    ## 메시지 1
    **작성자:**  
    **시각:**  
    **한 줄 요약:**  
    **리액션/스레드:** 👍xN · 댓글 N개  
    **카테고리:** 공지/논의/결정 …  
    **링크:** [퍼머링크]  
    ---
  agent: slack_hunter_agent
  input_file: input/slack_raw.json
  markdown: true
  output_file: output/slack_collection.md
  create_directory: true

github_collection_task:
  설명: >
    기존 GitHub 원시 JSON (예: github_raw.json)을 입력으로 받아
    {팀/프로젝트} 관련 커밋/PR/이슈 활동을 구조화한다. (새 API 호출 없음)

    입력 스키마 (예시):
    - commits[].{ sha, message, author, html_url, date, userInfo }

    처리 단계:
    1) 정규화: date→ISO, author/userInfo 병합
    2) 메시지에서 이슈/티켓 참조(#12345, 修正依頼表) 감지
    3) 변경 태깅: 修正/출力対応/로그/버전
    4) 기여자 집계: Author별 커밋 수, html_url 링크
    5) {팀/프로젝트} 연관성 점수 부여

  예상_출력: >
    # GitHub 활동 수집: {팀/프로젝트}

    **수집 요약**
    - 커밋 수:
    - 탐지된 PR/이슈 참조 수:
    - 기여자 수:
    - 수집 시각:

    ---

    ## 항목 1 (커밋)
    **SHA:** …  
    **메시지:** … (티켓 ID 강조)  
    **작성자:** …  
    **시각:** …  
    **링크:** …  
    **태그:** 修正/機能改修/出力/로그/버전 …  
    ---
  agent: github_hunter_agent
  input_file: input/github_raw.json
  markdown: true
  output_file: output/github_collection.md
  create_directory: true

internal_summarization_task:
  설명: >
    Slack/GitHub 수집 결과(slack_collection.md, github_collection.md)와
    원본 JSON의 맥락을 바탕으로 다층 요약을 생성한다.

    요약 단계:
    1) **한 줄 요약 (≤150자)** — 핵심 결정/결론
    2) **팀 브리핑 (150~200 단어)** — 의미/영향/리스크/다음 단계
    3) **종합 요약 (400~600 단어)** — 배경, 논의 흐름, 이해관계자
    4) **메트릭 추출** — 진행률 %, 기여자 랭킹, 이슈 분포

    원칙:
    - 정확성, 객관성, 개인정보 보호(민감정보 마스킹)
    - Slack 퍼머링크, 커밋 URL 등 링크 첨부
    - 시각화를 위한 구조적 메트릭 포함

  예상_출력: >
    # 사내 활동 요약: {팀/프로젝트}

    **개요**
    - 처리된 항목 수:
    - 생성 시각:

    ---

    ## 항목 1: [주제/이슈/기능명]
    **출처:** Slack/GitHub  
    **관련자:** …  
    **링크:** [Slack] [Commit/Issue]

    ### ✏ 한 줄 요약
    …

    ### 📋 팀 브리핑
    …

    ### 📖 종합 요약
    …

    **주요 포인트**
    - 진행 상황:
    - 리스크/블로커:
    - 다음 단계:

    **메트릭**
    - 진행률 %:
    - Top 기여자:
    - 이슈 분포:
    ---
  agent: summarizer_agent
  markdown: true
  output_file: output/internal_summary.md
  create_directory: true

visualization_task:
  설명: >
    추출된 메트릭을 차트, 로드맵, 랭킹표 등 시각화 자료로 변환한다.
    - 진행률 → progress bar
    - 이슈 분포 → 파이차트
    - 기여자 활동 → 막대그래프
    - 향후 작업 → 로드맵/타임라인

  예상_출력: >
    # 시각화 자료: {팀/프로젝트}

    ## 📊 진행률
    [Progress bar / 퍼센트]

    ## 🥇 Top 기여자
    [막대그래프 또는 랭킹표]

    ## 🗂 이슈 분포
    [파이차트]

    ## 🗓 로드맵 / 타임라인
    [타임라인 다이어그램]
  agent: visualizer_agent
  input_file: output/internal_summary.md
  markdown: true
  output_file: output/visuals.md
  create_directory: true

fun_corner_task:
  설명: >
    뉴스레터 끝부분에 포함할 가벼운 재미 요소를 생성한다.
    - 이모지 포함 칭찬 랭킹
    - 미니 퀴즈/트리비아
    - 밈 또는 가벼운 유머

  예상_출력: >
    # 🎉 Fun Corner

    ## 주간 칭찬 랭킹
    🥇 [이름] — [이유]  
    🥈 [이름] — [이유]  
    🥉 [이름] — [이유]  

    ## 퀵 퀴즈
    Q: …

    ## 이번 주 밈
    [이미지/링크/짧은 농담]
  agent: fun_agent
  markdown: true
  output_file: output/fun_corner.md
  create_directory: true

newsletter_assembly_task:
  설명: >
    요약, 시각화, Fun Corner를 합쳐 최종 주간 사내 뉴스레터를 완성한다.
    에디토리얼 구조(섹션, 순서, 전환 문장, 도입/클로징)를 적용한다.

  예상_출력: >
    # 주간 사내 뉴스레터: {팀/프로젝트}

    **발행일:**  
    **작성 시각:**  
    **포함된 항목 수:**  

    ## 📰 이번 주 하이라이트
    …

    ---

    ## 🚩 주요 이슈
    …

    ---

    ## ⚙ 진행 중인 작업
    …

    ---

    ## 📈 진행률 & 로드맵
    [시각화 포함]

    ---

    ## 🥇 팀 랭킹
    [기여자 차트]

    ---

    ## 🌱 다가오는 일정
    …

    ---

    ## 🎉 Fun Corner
    [생성된 재미 요소]

    ---

    ## ✨ 편집자 코멘트
    …
  agent: curator_agent
  input_files:
    - output/internal_summary.md
    - output/visuals.md
    - output/fun_corner.md
  markdown: true
  output_file: output/final_internal_newsletter.md
  create_directory: true
